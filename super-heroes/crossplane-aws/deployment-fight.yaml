apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app: "quarkus-workshop-fight"
    version: "01"
    group: "super-heroes"
  name: "quarkus-workshop-fight"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "quarkus-workshop-fight"
      version: "01"
      group: "super-heroes"
  template:
    metadata:
      labels:
        app: "quarkus-workshop-fight"
        version: "01"
        group: "super-heroes"
    spec:
      containers:
      - image: "esara/quarkus-workshop-fight"
        imagePullPolicy: "IfNotPresent"
        name: "quarkus-workshop-fight"
        ports:
        - containerPort: 8082
        env:
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: QUARKUS_HTTP_PORT
          valueFrom:
            configMapKeyRef:
              name: fight-config
              key: port
        - name: QUARKUS_DATASOURCE_JDBC_URL
          value: jdbc:postgresql://$(endpoint):$(port)/fight
        - name: QUARKUS_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fights-connection-secret
              key: password
        - name: IO_QUARKUS_WORKSHOP_SUPERHEROES_FIGHT_CLIENT_HEROPROXY_MP_REST_URL
          valueFrom:
            configMapKeyRef:
              name: fight-config
              key: hero
        - name: IO_QUARKUS_WORKSHOP_SUPERHEROES_FIGHT_CLIENT_VILLAINPROXY_MP_REST_URL
          valueFrom:
            configMapKeyRef:
              name: fight-config
              key: villain
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            secretRef:
              name: kafka-connection-secret
              key: clusterEndpointTls
        - name: KAFKA_SECURITY_PROTOCOL
          value: SASL_SSL
        - name: KAFKA_SASL_MECHANISM
          value: SCRAM-SHA-512
        - name: KAFKA_SASL_JAAS_CONFIG
          value: org.apache.kafka.common.security.scram.ScramLoginModule required username="${KAFKA_USERNAME:admin}" password="${KAFKA_PASSWORD:quarkus}";
        envFrom:
        - secretRef:
            name: fights-connection-secret
        livenessProbe:
          httpGet:
            path: /q/health/live
            port: 8082
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /q/health/ready
            port: 8082
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    app: "quarkus-workshop-fight"
    version: "01"
    group: "super-heroes"
  name: "quarkus-workshop-fight"
spec:
  ports:
    - name: "http"
      port: 8082
  selector:
    app: "quarkus-workshop-fight"
    version: "01"
    group: "super-heroes"
  type: "NodePort"
